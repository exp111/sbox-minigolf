@PointClass editormodel("models/golf_ball.vmdl") drawangles() = minigolf_hole_spawn : "Minigolf Ball Spawn"
[
    hole_number(integer): "Hole Number" : 1 : "Which hole this spawnpoint is on."
    hole_name(string): "Hole Name" : "wanker" : "cool"
    hole_par(integer): "Hole Par" : 3 : "How many strokes should this hole be done in."
]

@SolidClass = minigolf_hole_goal : "Minigolf Hole"
[
    hole_number(integer): "Hole Number" : 1 : "Which hole this hole is on."
]

@SolidClass = minigolf_hole_bounds : "Minigolf Bounds of a Hole"
[
    hole_number(integer): "Hole Number" : 1 : "Which hole these boundries are."
]

@PointClass editormodel("models/golf_flag.vmdl") = minigolf_flag_base : "Minigolf Flag Base"
[
	hole_number(integer): "Hole Number" : 1 : "Which hole this flag is on."
]

@PointClass base(Parentname, Targetname) frustum( FOV, ZNear, ZFar ) editormodel("models/editor/camera.vmdl") = minigolf_start_camera : "Minigolf Start Camera"
[
	FOV(float) : "FOV" : 90 : "Field of view in degrees"
	ZNear(float) : "ZNear" : 4 : "Distance to the near plane"
	ZFar(float) : "ZFar" : 10000 : "Distance to the far plane"
]

@PointClass base(Parentname, Targetname) frustum( FOV, ZNear, ZFar ) editormodel("models/editor/camera.vmdl") = minigolf_hole_camera : "Minigolf Hole Camera"
[
    hole_number(integer): "Hole Number" : 1 : "Which hole this camera is for"

	FOV(float) : "FOV" : 90 : "Field of view in degrees"
	ZNear(float) : "ZNear" : 4 : "Distance to the near plane"
	ZFar(float) : "ZFar" : 10000 : "Distance to the far plane"
]


@SolidClass base(Door) drawangles( movedir, movedir_islocal ) = func_moving_obstacle : 
	"A brush entity for an automatic moving obstacle."
[
	movedir(angle) : "Move Direction (Pitch Yaw Roll)" : "0 0 0" : "The direction the brushes will move, when told to."
	movedir_islocal(boolean) : "Move Direction is Expressed in Local Space" : "1" : "If checked, the movement direction angle is in local space and should be rotated by the entity's angles after spawning."
]

@SolidClass base(PhysicsTypeOverride_Mesh, Targetname, RenderFields, Shadow) = minigolf_wall : 
	"An brush built entity with various features." 
[
	vrad_brush_cast_shadows(boolean) : "Shadows" : 1 : "Set this if this brush casts lightmap shadows."

	surface_property_override(surface_properties) : "Surface Property Override" : "" : "Overrides the default surface property."

	Reflect(boolean) : "Reflect" : "1" : "If checked, the ball will bounce off this surface at the defined multiplier."
	ReflectMultiplier(float) : "Reflect multiplier" : 1 : "How much the wall will reflect"
]

@SolidClass base(PhysicsTypeOverride_Mesh, Targetname, RenderFields, Shadow) drawangles( movedir, movedir_islocal ) = minigolf_speed_boost : 
	"An brush built entity that will boost balls." 
[
	vrad_brush_cast_shadows(boolean) : "Shadows" : 1 : "Set this if this brush casts lightmap shadows."

	movedir(angle) : "Move Direction (Pitch Yaw Roll)" : "0 0 0" : "The direction the ball will move, when told to."
	movedir_islocal(boolean) : "Move Direction is Expressed in Local Space" : "1" : "If checked, the movement direction angle is in local space and should be rotated by the entity's angles after spawning."

	SpeedMultiplier(float) : "Speed Multiplier" : 1 : "How much the ball will accelerate"
	MaxSpeed(float) : "Max Speed" : 1000 : "Max speed the ball can be accelerated to from this booster."
]